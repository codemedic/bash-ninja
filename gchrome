#!/usr/bin/env bash

# google-chrome profile launcher
#
# Adaptation of various ideas and solutions mentioned in https://superuser.com/a/377195/28775
# This script is meant to be "sourced" into your bash-profile. It provides command 'gchrome'
# and provides auto-completion of the profile-name.

if [ "${BASH_VERSINFO:-0}" -lt 4 ]; then
  echo "gchrome: google-chrome profile launcher
  Error: Bash version ${BASH_VERSION} < 4
  google-chrome profile launcher requires bash version 4 or greater (we use associative arrays).
  Install it with something like:
    brew install bash
      or
    sudo apt-get install bash"
  exit 1
fi

if ! which -s jq; then
  echo "gchrome: google-chrome profile launcher
  Error: jq not found.
  jq is a lightweight and flexible command-line JSON processor. Install it with something like:
    brew install jq
      or
    sudo apt-get install jq"
  exit 1
fi

if test -d "$HOME/.config/google-chrome"; then
  : "${_gchrome_base_dir:="$HOME/.config/google-chrome"}"
else
  : "${_gchrome_base_dir:="$HOME/Library/Application Support/Google/Chrome"}"
fi

if test -f "/usr/bin/google-chrome"; then
  : "${_gchrome_executable:="/usr/bin/google-chrome"}"
else
  : "${_gchrome_executable:="/Applications/Google Chrome.app/Contents/MacOS/Google Chrome"}"
fi

_gchrome_get_profiles() {
    < "${_gchrome_base_dir}/Local State" \
        jq -r '[.profile.info_cache | to_entries[] | {"key": .key, "value": .value.name}] | .[] | "profiles+=([\(.value|@sh)]=\(.key|@sh));"'
}

_gchrome_get_completion() {
    declare -A profiles
    eval "$(_gchrome_get_profiles)"
    for key in "${!profiles[@]}"; do
        echo "$key";
    done
}

_gchrome_make_completion() {
    declare -A profiles
    eval "$(_gchrome_get_profiles)"

    COMPREPLY=()
    local cur="${COMP_WORDS[COMP_CWORD]}"
    for key in "${!profiles[@]}"; do
        if [[ "$key" =~ ^$cur ]]; then
            COMPREPLY+=( "$(printf '%q' "$key")" )
        fi
    done
}

_gchrome_is_valid_profile() {
    local profile_path="${_gchrome_base_dir}/$1"
    [ -n "$1" ] &&
        [ -d "$(readlink -f "$profile_path")" ] &&
        [ -f "$(readlink -f "$profile_path/Cookies")" ]
}

_gchrome_is_valid_profile_alias() {
    declare -A profiles
    eval "$(_gchrome_get_profiles)"

    [ -n "${1:-}" ] &&
        [ -v "profiles['${1:-}']" ] &&
        _gchrome_is_valid_profile "${profiles[$1]}";
}

_gchrome_get_last_used_profile() {
    < "${_gchrome_base_dir}/Local State" \
        jq -r '.profile.last_used'
}

gchrome() {
    local opts=()
    declare -A profiles
    eval "$(_gchrome_get_profiles)"

    if _gchrome_is_valid_profile "${1:-}"; then
        opts+=("--profile-directory=$1")
        shift
    elif _gchrome_is_valid_profile_alias "${1:-}"; then
        opts+=("--profile-directory=${profiles[$1]}")
        shift
    fi

    if [ "${_gchrome_exec:-0}" = 1 ]; then
        export GTK_THEME=""
        exec "${_gchrome_executable}" --disk-cache-size=536870912 "${opts[@]}" "$@" &>/dev/null
    else
        ( GTK_THEME="" \
            "${_gchrome_executable}" --disk-cache-size=536870912 "${opts[@]}" "$@" &>/dev/null &
            disown
        )
    fi
}

if [[ "$0" != "${BASH_SOURCE[0]}" ]]; then
    # being sourced
    complete -F _gchrome_make_completion gchrome
else
    export _gchrome_exec=1
    if _gchrome_is_valid_profile "$1" || _gchrome_is_valid_profile_alias "$1"; then
        gchrome "$@"
    else
        gchrome "$(_gchrome_get_last_used_profile)" "$@"
    fi
fi
